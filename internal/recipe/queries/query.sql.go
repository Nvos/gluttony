// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package queries

import (
	"context"
	"time"
)

const createRecipe = `-- name: CreateRecipe :one

INSERT INTO recipes (name, content_markdown, created_at)
VALUES (?, ?, ?)
RETURNING id, name, content_markdown, created_at
`

type CreateRecipeParams struct {
	Name            string
	ContentMarkdown string
	CreatedAt       time.Time
}

func (q *Queries) CreateRecipe(ctx context.Context, arg CreateRecipeParams) (Recipe, error) {
	row := q.db.QueryRowContext(ctx, createRecipe, arg.Name, arg.ContentMarkdown, arg.CreatedAt)
	var i Recipe
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.ContentMarkdown,
		&i.CreatedAt,
	)
	return i, err
}

const getRecipe = `-- name: GetRecipe :one
SELECT id, name, content_markdown, created_at
FROM recipes
WHERE id = ?
LIMIT 1
`

func (q *Queries) GetRecipe(ctx context.Context, id int64) (Recipe, error) {
	row := q.db.QueryRowContext(ctx, getRecipe, id)
	var i Recipe
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.ContentMarkdown,
		&i.CreatedAt,
	)
	return i, err
}
