{{ define "base" }}
  <!doctype html>
  <html lang="en">
    <head>
      <title>{{ template "title" . }}</title>
      <link rel="stylesheet" href="/assets/css/tailwind.css" />

      {{/* TODO: serve locally */}}
      <script
        defer
        src="https://cdn.jsdelivr.net/npm/@alpinejs/focus@3.x.x/dist/cdn.min.js"
      ></script>
      <script
        defer
        src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"
      ></script>
      <script src="https://unpkg.com/htmx.org@2.0.4" defer></script>
      <script>
        const setTheme = (theme) => {
          localStorage.setItem('theme', theme);
          if (theme === 'dark') {
            document.documentElement.classList.add('dark');

            return;
          }

          if (theme === 'system') {
            localStorage.removeItem('theme');

            if (window.matchMedia('(prefers-color-scheme: dark)')) {
              document.documentElement.classList.add('dark');
              return;
            }
          }

          document.documentElement.classList.remove('dark');
        };

        try {
          if (
            localStorage.theme === 'dark' ||
            (!('theme' in localStorage) &&
              window.matchMedia('(prefers-color-scheme: dark)').matches)
          ) {
            document.documentElement.classList.add('dark');
          } else {
            document.documentElement.classList.remove('dark');
          }
        } catch (_) {}
      </script>
      {{ template "head" . }}
    </head>
    <body
      class="bg-neutral-layer-1 text-neutral-font flex h-dvh flex-col antialiased"
    >
      {{ template "view" . }}
      <script>
        function retry() {
          setTimeout(() => listen(true), 1000);
        }

        function listen(isRetry) {
          let protocol = location.protocol === 'https:' ? 'wss://' : 'ws://';
          let ws = new WebSocket(protocol + location.host + '/reload');
          if (isRetry) {
            ws.onopen = () => window.location.reload();
          }
          ws.onmessage = function (msg) {
            if (msg.data === 'reload') {
              window.location.reload();
            }
          };
          ws.onclose = retry;
        }

        listen(false);
      </script>
    </body>
  </html>
{{ end }}
